m <- ggplot(data=uber[1:i,],aes(Lat[1:i],Lon[1:i])) +
geom_point(size=0.06, color="black", alpha = 0.5) +
#stat_density2d(aes(fill=..level..,alpha=..level..),geom='polygon',colour='black') +
#scale_fill_continuous(low="green",high="red") +
#guides(alpha="none") +
scale_y_continuous(limits=c(min_long, max_long)) +
scale_x_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = 41, y=-72.8, label = uber$Date.Time[i], colour = 'black', size = 8)
m + geom_density_2d()
m <- ggplot(uber, aes(x = Lon, y = Lat)) +
geom_point() +
xlim(min_lat, max_lat) +
ylim(min_long, max_long)
m + geom_density_2d()
m <- ggplot(uber, aes(x = Lon, y = Lat)) +
geom_point() +
ylim(min_lat, max_lat) +
xlim(min_long, max_long)
m + geom_density_2d()
i = 1
saveGIF(while (i <= l) {
print(m <- ggplot(data=uber[1:i,],aes(Lat[1:i],Lon[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.1) +
scale_y_continuous(limits=c(min_long, max_long)) +
scale_x_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = 41, y=-72.8, label = uber$Date.Time[i], colour = 'blue', size = 8))
i = i+100000
}, movie.name = "uber.gif", interval = 0.1, convert = "convert", ani.width = 800,
ani.height = 800)
i = 1
saveGIF(while (i <= l) {
print(m <- ggplot(data=uber[1:i,],aes(Lat[1:i],Lon[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.1) +
scale_y_continuous(limits=c(min_long, max_long)) +
scale_x_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = 41, y=-72.8, label = uber$Date.Time[i], colour = 'blue', size = 8))
i = i+25000
}, movie.name = "uber.gif", interval = 0.1, convert = "convert", ani.width = 800,
ani.height = 800)
l = length(uber$Date.Time)
i = 1
saveGIF(while (i <= l) {
print(m <- ggplot(data=uber[1:i,],aes(Lon[1:i],Lat[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.2) +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x =-72.8, y=41, label = uber$Date.Time[i], colour = 'blue', size = 8))
i = i+25000
}, movie.name = "uber.gif", interval = 0.1, convert = "convert", ani.width = 800,
ani.height = 800)
i = 1
ggplot(data=uber[1:i,],aes(Lon[1:i],Lat[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.2) +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x =-72.8, y=41, label = uber$Date.Time[i], colour = 'blue', size = 8)
ggplot(data=uber[1:i,],aes(Lon[1:i],Lat[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.2) +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x =-73.0, y=41.2, label = uber$Date.Time[i], colour = 'blue', size = 8)
uber = read.csv('uber-raw-data-sep14.csv', stringsAsFactors = F)
strsplit(uber$Date.Time, split = " ")[1]
strsplit(uber$Date.Time, split = " ")[[1]][1]
uber$Date = strsplit(uber$Date.Time, split = " ")[[1]][1]
View(uber)
strsplit(uber$Date.Time, split = " ")
uber$Date = strsplit(uber$Date.Time, split = " ")
View(uber)
?sapply
uber$Date = sapply(uber$Date.Time, strsplit)
uber$Date = sapply(uber$Date.Time, strsplit(split = " "))
uber$Date = sapply(X = uber$Date.Time, FUN = strsplit(split = " "))
uber$Date = sapply(x = uber$Date.Time, FUN = strsplit(split = " "))
uber$Date = sapply(strsplit(uber$Date.Time, split = " "), function(x) x[[1]][1])
View(uber)
ggplot(data=uber[1:i,],aes(Lon[1:i],Lat[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.2) +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x =-73.0, y=41.2, label = uber$Date[i], colour = 'blue', size = 8)
ggplot(data=uber[1:i,],aes(Lon[1:i],Lat[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.2) +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x =-73.0, y=41.2, label = uber$Date[i], colour = 'white', size = 8)
saveGIF(while (i <= l) {
print(m <- ggplot(data=uber[1:i,],aes(Lon[1:i],Lat[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.2) +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x =-73.0, y=41.2, label = uber$Date[i], colour = 'white', size = 8))
i = i+25000
}, movie.name = "uber.gif", interval = 0.1, convert = "convert", ani.width = 800,
ani.height = 800)
uber = read.csv('uber-raw-data-sep14.csv', stringsAsFactors = F)
uber$Date = sapply(strsplit(uber$Date.Time, split = " "), function(x) x[[1]][1])
min_lat <- min(uber$Lat)
max_lat <- max(uber$Lat)
min_long <- min(uber$Lon)
max_long <- max(uber$Lon)
l = length(uber$Date.Time)
s <- map_data("world")
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
s <- map_data("world")
library('ggplot2')
library('animation')
s <- map_data("world")
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
#Set a weather column,
Endeavour$Col = "white"
Endeavour$Col[grep("rain|showers", Endeavour$PrecipitationDescriptor)] = 'blue'
Endeavour$Col[grep("fine|pleasant|fair|clear", Endeavour$Clearness)] = 'light blue'
Endeavour$Col[grep("cloudy|hazy", Endeavour$Clearness)] = 'grey'
#Work out the total distance,
Endeavour$Total_Distance = cumsum(Endeavour$Distance)
#Fit a spline to the coordiates to make the Earth's movement a little less jittery,
ss = smooth.spline(Endeavour$Lon3, Endeavour$Lat3)
#Rearrange to get the starting point to the UK. Add a few points as the spline has fewer than the starting coordiates,
ssc = as.data.frame(cbind(ss$x, ss$y))
ss1 = ssc[1:255,]
ss2 = ssc[256:334,]
ss_add = rbind(ss1[255,],ss1[255,],ss1[255,],ss1[255,],ss1[255,],ss1[255,],ss1[255,])
ss_new = rbind(ss_add, ss_add, ss1[255,],ss2, ss1)
#Quick check of the starting and new coordinates,
#Note, this spline is for the movement of the Earth, NOT the position of the ship,
plot(Endeavour$Lon3, Endeavour$Lat3, col = "red")
points(ss_new)
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(size = 6, colour = 'black', aes(x = uber$Lon[i], y = uber$Lat[i])) #Plot the Endeavour's position
+ scale_shape_identity() #Need this to allow the size and colour to come from their respective variables
#+ annotate("text", x =-73.0, y=41.2, label = uber$Date[i], colour = 'white', size = 8))
#+ ggtitle(expression(atop("The First Voyage of James Cook - UK to Cape Horn", #Add the title and subtitle
#                          atop(italic("Spot size = Distance (arb). Colour = Day's weather"), "")))))
)
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(size = 6, colour = 'black', aes(x = uber$Lon[i], y = uber$Lat[i]))
orient_x = 0
orient_y = 0
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(size = 6, colour = 'black', aes(x = uber$Lon[i], y = uber$Lat[i]))
i = 1
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(size = 6, colour = 'black', aes(x = uber$Lon[i], y = uber$Lat[i]))
orient_x = 40.7
orient_y = -74.0
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(size = 6, colour = 'black', aes(x = uber$Lon[i], y = uber$Lat[i]))
s$region
s$region == 'United States'
table(s$region == 'United States')
table(s$region == 'US')
table(s$region == 'USA')
s = s[s$region == 'USA',]
s$subregion
table(s$subregion == 'New York')
s = s[s$subregion == 'New York',]
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(size = 6, colour = 'black', aes(x = uber$Lon[i], y = uber$Lat[i]))
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(size = 6, colour = 'black', aes(x = uber$Lon, y = uber$Lat))
ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(data = uber, size = 6, colour = 'black', aes(x=Lon, y=Lat))
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0)) + #Set the viewing position
geom_point(data = uber, size = 6, colour = 'black', aes(x=Lon, y=Lat))
m <- ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
View(s)
m <- ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
ggplot(s, aes(x=long, y=lat, group=group))
ggplot(s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(s, aes(x=long, y=lat, group=group), colour="black")
ggplot(data = s, aes(x=long, y=lat, group=group))
ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black")
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
+ #Set the viewing position
geom_point(data = uber, size = 6, colour = 'black', aes(x=Lon, y=Lat))
s <- map_data("world")
s$colour = "green"
s = s[s$region == 'USA',]
table(s$subregion)
ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
s = s[s$subregion == 'New York',]
ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat, group=group), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m + geom_point(data = uber, size = 6, colour = 'black', aes(x=Lon, y=Lat)) #Plot the Endeavour's position
ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m + geom_point(data = uber, size = 6, colour = 'black', aes(x=Lon, y=Lat)) #Plot the Endeavour's position
m
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
+ #Set the viewing position
m + geom_point(data = uber, size = 6, colour = 'black', aes(shape=NULL, x=Lon, y=Lat))
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m + geom_point(data = uber, size = 6, colour = 'black', aes(shape=NULL, x=Lon, y=Lat))
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m + geom_point(inherit.aes=FALSE, data = uber, size = 6, colour = 'black', aes(x=Lon, y=Lat)) #Plot the Endeavour's position
m
m + geom_point(inherit.aes=FALSE, data = uber[1:1000,], size = 1, colour = 'black', aes(x=Lon[1:1000], y=Lat[1:1000])) #Plot the Endeavour's position
s = s[s$region == 'USA',]
s <- map_data("world")
s = s[s$region == 'USA',]
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
#Load the map data,
s <- map_data("world")
#Set everywhere to green,
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
s = s[s$region == 'USA',]
#s = s[s$subregion == 'New York',]
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m
s = s[s$long > 30 & s$long < 50 & s$lat < -64 & s$lat > -84,]
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m
#Load the map data,
s <- map_data("world")
#Set everywhere to green,
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
s = s[s$region == 'USA',]
s$long > 30
s$long > 30 & s$long < 50
table(s$long > 30 & s$long < 50)
table(s$long > 30)
#Load the map data,
s <- map_data("world")
#Set everywhere to green,
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
table(s$long > 30)
s = s[s$long > 30 & s$long < 50 & s$lat < -64 & s$lat > -84,]
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m
View(s)
s <- map_data("world")
#Set everywhere to green,
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
#s = s[s$region == 'USA',]
#s = s[s$subregion == 'New York',]
s = s[s$lat > 30 & s$lat < 50 & s$long < -64 & s$long > -84,]
ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m + geom_point(inherit.aes=FALSE, data = uber[1:1000,], size = 1, colour = 'black', aes(x=Lon[1:1000], y=Lat[1:1000])) #Plot the Endeavour's position
#Load the map data,
s <- map_data("world")
#Set everywhere to green,
s$colour = "green"
#Change a few obvious ones,
s$colour[s$region == "Antarctica"] = "white"
s$colour[s$region == "Greenland"] = "white"
s$colour[s$region == "Morocco"] = "orange"
s$colour[s$region == "Algeria"] = "orange"
s$colour[s$region == "Tunisia"] = "orange"
s$colour[s$region == "Libya"] = "orange"
s$colour[s$region == "Egypt"] = "orange"
s$colour[s$region == "Saudi Arabia"] = "orange"
s$colour[s$region == "Australia"] = "orange"
s$colour[s$region == "Mongolia"] = "orange"
#s = s[s$region == 'USA',]
#s = s[s$subregion == 'New York',]
s = s[s$lat > 35 & s$lat < 45 & s$long < -70 & s$long > -80,]
m <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2
geom_path(data = s, aes(x=long, y=lat), colour="black") + #Plot the Earth
geom_polygon(fill=s$colour, colour="black") + #Colour the countries
theme(panel.grid.major = element_line(colour = "black")) + #Make the grid-lines black
coord_map("ortho", orientation=c(orient_x,orient_y,0))
m + geom_point(inherit.aes=FALSE, data = uber[1:1000,], size = 1, colour = 'black', aes(x=Lon[1:1000], y=Lat[1:1000])) #Plot the Endeavour's position
uber = read.csv('uber-raw-data-sep14.csv', stringsAsFactors = F)
uber$Date = sapply(strsplit(uber$Date.Time, split = " "), function(x) x[[1]][1])
View(uber)
uber$Date = as.Date(uber$Date, format = "%m/%d/%Y")
uber = uber[order(uber$Date),]
View(uber)
library('ggplot2')
library('animation')
uber = read.csv('uber-raw-data-sep14.csv', stringsAsFactors = F)
uber$Date = sapply(strsplit(uber$Date.Time, split = " "), function(x) x[[1]][1])
uber$Date = as.Date(uber$Date, format = "%m/%d/%Y")
uber = uber[order(uber$Date),]
min_lat <- min(uber$Lat)
max_lat <- max(uber$Lat)
min_long <- min(uber$Lon)
max_long <- max(uber$Lon)
l = length(uber$Date.Time)
i = 1
saveGIF(while (i <= l) {
print(m <- ggplot(data=uber[1:i,],aes(Lon[1:i],Lat[1:i])) +
geom_point(size=0.06, color="white", alpha = 0.2) +
scale_x_continuous(limits=c(min_long, max_long)) +
scale_y_continuous(limits=c(min_lat, max_lat)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x =-73.0, y=41.2, label = uber$Date[i], colour = 'white', size = 8))
i = i+25000
}, movie.name = "uber.gif", interval = 0.1, convert = "convert", ani.width = 800,
ani.height = 800)
uber = read.csv('uber-raw-data-sep14.csv', stringsAsFactors = F)
View(uber)
