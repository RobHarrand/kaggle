{
    "collab_server" : "",
    "contents" : "dt1 = read.csv('Copy of Pets_for_Patriots_Partner_Network.csv')\ndt2 = read.csv('Pets.csv')\n\ntable(dt1$State.Province)\ntable(dt2$Location)\n\ndt1$State.Province[dt1$State.Province == 'CA'] = 'California'\ndt1$State.Province[dt1$State.Province == 'CO'] = 'Colorado'\ndt1$State.Province[dt1$State.Province == 'CT'] = 'Connecticut'\ndt1$State.Province[dt1$State.Province == 'DC'] = 'District of Columbia'\ndt1$State.Province[dt1$State.Province == 'GA'] = 'Georgia'\ndt1$State.Province[dt1$State.Province == 'IL'] = 'Illinois'\ndt1$State.Province[dt1$State.Province == 'MO'] = 'Missouri'\ndt1$State.Province[dt1$State.Province == 'MT'] = 'Montana'\ndt1$State.Province[dt1$State.Province == 'NC'] = 'North Carolina'\ndt1$State.Province[dt1$State.Province == 'NY'] = 'New York'\ndt1$State.Province[dt1$State.Province == 'OH'] = 'Ohio'\ndt1$State.Province[dt1$State.Province == 'TX'] = 'Texas'\ndt1$State.Province[dt1$State.Province == 'WA'] = 'Washington'\n\ndt1 = droplevels(dt1)\n\nmerged = merge(dt1, dt2, by.x = 'State.Province', by.y = 'Location')\n\n\n#Plotting\n\nmerged$Dog.Population..in.1000. = gsub(\",\", \"\", merged$Dog.Population..in.1000.)\nmerged$Dog.Population..in.1000. = as.character(merged$Dog.Population..in.1000.)\nmerged$Dog.Population..in.1000. = as.numeric(merged$Dog.Population..in.1000.)\n\nmerged$Cat.Population = gsub(\",\", \"\", merged$Cat.Population)\nmerged$Cat.Population = as.character(merged$Cat.Population)\nmerged$Cat.Population = as.numeric(merged$Cat.Population)\n\n\nlibrary(scales)\nlibrary(plotly)\nlibrary(ggplot2)\n\n\n# col = alpha('dark green', 0.1)\n# \n# plot(merged$Latitude, \n#      merged$Longitude, \n#      cex = merged$Dog.Population..in.1000./2000,\n#      pch = 16,\n#      col = col)\n# \n# t <- list(\n#   family = \"sans serif\",\n#   size = 18,\n#   color = toRGB(\"grey50\")\n# )\n# \n# plot_ly(x = merged$Latitude, \n#         y = merged$Longitude, \n#         mode = \"markers\", \n#         showlegend = T, \n#         color = I('dark green'),\n#         alpha = 0.15,\n#         size = merged$Dog.Population..in.1000./2000)\n#           \n# \n# s <- map_data(\"world\")\n# s$colour = \"black\"\n# \n# min_lat <- min(merged$Latitude, na.rm = T)\n# max_lat <- max(merged$Latitude, na.rm = T)\n# min_long <- min(merged$Longitude)\n# max_long <- max(merged$Longitude)\n# orient_x = 40\n# orient_y = -120\n# \n# p <- ggplot(data = s, aes(x=long, y=lat, group=group)) + #Set ggplot2\n#     \n#     geom_path(data = s, aes(x=long, y=lat), colour=\"black\") + #Plot the Earth\n#     \n#     geom_polygon(fill=s$colour, colour=\"black\") + #Colour the countries\n#     \n#     theme(panel.grid.major = element_line(colour = \"black\")) + #Make the grid-lines black\n#     \n#     coord_map(\"ortho\", orientation=c(orient_x,orient_y,0)) +\n#     \n#     geom_point(inherit.aes=FALSE, \n#                data = merged, \n#                size = merged$Dog.Population..in.1000./2000, \n#                colour = 'green', \n#                aes(x=Longitude, \n#                    y=Latitude), \n#                alpha = 0.2)# +\n#     \n#     #annotate(\"text\", x =-100, y=-10, label = ufos$Date[i], colour = 'red', size = 10) + \n#     \n#     #annotate(\"text\", x =-100, y=-20, label = paste('No. of cases: ', i, sep = ''), colour = 'red', size = 8)\n# \n# \n# \n# ggplotly(p)\n# \n# \n# \n# \n# p <- plot_ly(lon = merged$Longitude,lat = merged$Latitude, type = \"scattergeo\",mode = \"markers\")\n# \n# p <- add_trace(long = s$long, lat = s$lat, \n#                mode = \"lines\", line = list(color=toRGB(\"black\"),width = 0.5),\n#                type = \"scattergeo\",  hoverinfo = \"none\",showlegend = F)\n# \n# p <- layout(p, geo = g)\n# \n# \n# \n# \n# \n#           hoverinfo = \"text\",\n#           textfont = t, text = paste(\"Address = \",  merged$Address))\n# \n# %>%\n#   layout(p,title =\"cPAN Data June 2016\", titlefont = t, xaxis = list(title = \"Scaled Lipase\", titlefont = t),\n#          yaxis = list(title = \"Scaled Amylase\", titlefont = t))\n# \n# \n# \n# \n# \n# #Chloropleth\n# \n# merged$hover <- with(merged, \"no hover\")\n# # give state boundaries a white border\n# l <- list(color = toRGB(\"white\"), width = 2)\n# # specify some map projection/options\n# g <- list(\n#   scope = 'usa',\n#   projection = list(type = 'albers usa'),\n#   showlakes = TRUE,\n#   lakecolor = toRGB('white')\n# )\n# \n# \n# \n# merged$State.Province = state.abb[match(merged$State.Province,state.name)]\n# merged$State.Province = as.factor(merged$State.Province)\n# \n# state.abb[!(state.abb %in% merged$State.Province)]\n\n\n\n###\n\n# change default color scale title\n#m <- list(colorbar = list(title = \"% of households with pets\"))\n\n# geo styling\ng <- list(\n  scope = 'north america',\n  showland = TRUE,\n  landcolor = toRGB(\"darkolivegreen4\"),\n  subunitcolor = toRGB(\"darkolivegreen4\"),\n  countrycolor = toRGB(\"black\"),\n  showcoastlines = TRUE,\n  showocean = TRUE,\n  oceancolor = 'skyblue4',\n  showlakes = TRUE,\n  lakecolor = 'skyblue4',\n  showrivers = TRUE,\n  rivercolor = 'skyblue4',\n  showsubunits = TRUE,\n  showcountries = TRUE,\n  resolution = 5,\n  projection = list(\n    type = 'conic conformal',\n    rotation = list(lon = -100)\n  ),\n  lonaxis = list(\n    showgrid = TRUE,\n    gridwidth = 0.5,\n    range = c(-140, -55),\n    dtick = 5\n  ),\n  lataxis = list(\n    showgrid = TRUE,\n    gridwidth = 0.5,\n    range = c(20, 60),\n    dtick = 5\n  )\n)\n\n\n\np <- plot_geo(merged, \n              lat = ~Latitude, \n              lon = ~Longitude, \n              opacity = 0.5,\n              marker = list(color = 'red', \n                                     alpha = 0.3,\n                   size= ~I(merged$Dog.Population..in.1000.)/200,\n                   line = list(color = 'black',\n                               width = 1))) %>%\n  add_markers(\n    text = ~paste(\"Organisation: \", merged$Organization.Name,\n                  \"</br>\",\n                  \"</br>\",\n                  \"Address: \", merged$Address, \",\", merged$City, \", \", merged$Zip.Postal.Code, \", \", merged$State.Province,\n                  \"</br>\",\n                  \"Partner Type: \", merged$Partner.Type,\n                  \"</br>\",\n                  \"State Dog Population (thousands): \", merged$Dog.Population..in.1000.,  \" (~ point size)\",\n                  \"</br>\",\n                  \"State Cat Population (thousands): \", merged$Cat.Population,\n                  \"</br>\",\n                  \"State Proportion of households with pets: \", merged$Percentage.of.households.with.pets, \"%\", sep=\"\"),\n    hoverinfo = \"text\"\n  ) %>%\n  layout(title = 'Pets for Patriots Shelter Map & Animal Statistics', \n           geo = g)\n\np\n\n\n\n\nSys.setenv(\"plotly_username\"=\"tentotheminus9\")\nSys.setenv(\"plotly_api_key\"=\"VU1BYmduL9acUMjVYt2W\")\n\napi_create(p)\n\n\n\n",
    "created" : 1498144909602.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "340899878",
    "id" : "6C6A3260",
    "lastKnownWriteTime" : 1499097166,
    "last_content_update" : 1499097166264,
    "path" : "C:/Users/rob.harrand/Desktop/WORK/Kaggle/Pets/Pets/Pets.R",
    "project_path" : "Pets.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}