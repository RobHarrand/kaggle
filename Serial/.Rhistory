table(killers$Sex[killers$Multi == 0])
table(killers$Sex[killers$Multi == 1])
View(killers)
table(killers$Race[killers$Multi == 0])
table(killers$Race[killers$Multi == 1])
table(killers$WhiteMale[killers$Multi == 0])
table(killers$WhiteMale[killers$Multi == 1])
table(killers$IQ1[killers$Multi == 0])
mean(killers$IQ1[killers$Multi == 0], na.rm = T)
mean(killers$IQ1[killers$Multi == 1], na.rm = T)
mean(killers$Age1stKill[killers$Multi == 0], na.rm = T)
mean(killers$Age1stKill[killers$Multi == 1], na.rm = T)
mean(killers$NumVics[killers$Multi == 0], na.rm = T)
mean(killers$NumVics[killers$Multi == 1], na.rm = T)
barplot(mean(killers$NumVics[killers$Multi == 0], na.rm = T), mean(killers$NumVics[killers$Multi == 1], na.rm = T))
plot(mean(killers$NumVics[killers$Multi == 0], na.rm = T), mean(killers$NumVics[killers$Multi == 1], na.rm = T))
qplot(mean(killers$NumVics[killers$Multi == 0], na.rm = T), mean(killers$NumVics[killers$Multi == 1], na.rm = T))
m1 = mean(killers$NumVics[killers$Multi == 0], na.rm = T)
m2 = mean(killers$NumVics[killers$Multi == 1], na.rm = T)
ms = as.vector(c(m1,m2))
ms = data.frame(c(m1,m2))
barplot(as.matrix(ms))
barplot(as.matrix(ms), names.arg=c("Not multiple", "Mutliple"), beside=TRUE, col=terrain.colors(2), ylim = c(0,1))
barplot(as.matrix(ms), names.arg=c("Not multiple", "Mutliple"), beside=TRUE, col=terrain.colors(2))
barplot(as.matrix(ms), names.arg=c("Not multiple", "Mutliple"), beside=TRUE, col = c('light red', 'light blue'))
barplot(as.matrix(ms), names.arg=c("Not multiple", "Mutliple"), beside=TRUE, col = c('red', 'light blue'))
barplot(as.matrix(ms), names.arg=c("Not multiple", "Mutliple"),
beside=TRUE, col = c('red', 'light blue'), ylab = 'Mean no. of victims
barplot(as.matrix(ms), names.arg=c("Not multiple", "Mutliple"),
beside=TRUE, col = c('red', 'light blue'), ylab = 'Mean no. of victims')
barplot(as.matrix(ms), names.arg=c("Not multiple", "Mutliple"),
beside=TRUE, col = c('red', 'light blue'), ylab = 'Mean no. of victims')
m_iq1 = mean(killers$IQ1[killers$Multi == 0], na.rm = T)
m_iq2 = mean(killers$IQ1[killers$Multi == 1], na.rm = T)
m_numvics = data.frame(c(m_iq1,m_iq2))
m_age1 = mean(killers$Age1stKill[killers$Multi == 0], na.rm = T)
m_age2 = mean(killers$Age1stKill[killers$Multi == 1], na.rm = T)
m_numvics = data.frame(c(m_age1,m_age2))
m_numvic1 = mean(killers$NumVics[killers$Multi == 0], na.rm = T)
m_numvic2 = mean(killers$NumVics[killers$Multi == 1], na.rm = T)
m_numvics = data.frame(c(m_numvic1,m_numvic2))
m_iq1 = mean(killers$IQ1[killers$Multi == 0], na.rm = T)
m_iq2 = mean(killers$IQ1[killers$Multi == 1], na.rm = T)
m_iqs = data.frame(c(m_iq1,m_iq2))
m_age1 = mean(killers$Age1stKill[killers$Multi == 0], na.rm = T)
m_age2 = mean(killers$Age1stKill[killers$Multi == 1], na.rm = T)
m_ages = data.frame(c(m_age1,m_age2))
m_numvic1 = mean(killers$NumVics[killers$Multi == 0], na.rm = T)
m_numvic2 = mean(killers$NumVics[killers$Multi == 1], na.rm = T)
m_numvics = data.frame(c(m_numvic1,m_numvic2))
#Merge plots,
my_plots = data.frame(m_iqs, m_ages, m_numvics)
View(my_plots)
barplot(as.matrix(my_plots), names.arg=c("IQ", "Age (1st kill)", "No. victims"),
beside=TRUE, ylab = 'Mean no. of victims')
barplot(as.matrix(my_plots), names.arg=c("IQ", "Age (1st kill)", "No. victims"),
beside=TRUE, col=terrain.colors(3))
barplot(as.matrix(my_plots), names.arg=c("IQ", "Age (1st kill)", "No. victims"),
beside=TRUE, col=terrain.colors(2))
legend(16, 1, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(16, 80, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(1, 80, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(10, 80, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(2, 80, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(6, 80, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(8, 80, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(7, 80, c("GLM","Cforest","SVM","KNN","GBM", "Tree"), cex=0.6, fill=terrain.colors(6))
legend(7, 80, c("Single method", "Multiple methods"), cex=0.6, fill=terrain.colors(2))
#Plot all,
barplot(as.matrix(my_plots), names.arg=c("IQ", "Age (1st kill)", "No. victims"),
beside=TRUE, col=terrain.colors(2))
#Set the legend,
legend(6, 80, c("Single method", "Multiple methods"), cex=0.6, fill=terrain.colors(2))
str(killers, list.len = length(killers))
m_age1b = mean(killers$AgeLastKill[killers$Multi == 0], na.rm = T)
m_age2b = mean(killers$AgeLastKill[killers$Multi == 1], na.rm = T)
m_agesb = data.frame(c(m_age1b,m_age2b))
my_plots = data.frame(m_iqs, m_ages, m_agesb, m_numvics)
barplot(as.matrix(my_plots), names.arg=c("IQ", "Age (1st kill)", "Age (last kill)", "No. victims"),
beside=TRUE, col=terrain.colors(2))
legend(6, 80, c("Single method", "Multiple methods"), cex=0.6, fill=terrain.colors(2))
legend(6, 80, c("Single method", "Multiple methods"), cex=0.8, fill=terrain.colors(2))
table(killers$Sex[killers$Multi == 0])
table(killers$Sex[killers$Multi == 1])
table(killers$Sex[killers$Multi == 0])
table(killers$Sex[killers$Multi == 1])
table(killers$Race[killers$Multi == 0])
table(killers$Race[killers$Multi == 1])
lm = length(killers$Sex[killers$Multi == 0])
ls = length(killers$Sex[killers$Multi == 0])
lm = length(killers$Sex[killers$Multi == 1])
table(killers$Sex[killers$Multi == 0] / ls)
table(killers$Sex[killers$Multi == 0])
table(killers$Sex[killers$Multi == 0]) / ls
table(killers$Sex[killers$Multi == 0]) / ls*100
table(killers$Sex[killers$Multi == 1]) / lm*100
len_s_s = length(killers$Sex[killers$Multi == 0])
len_s_m = length(killers$Sex[killers$Multi == 1])
table(killers$Race[killers$Multi == 0]) / len_s*100
len_s = length(killers$Sex[killers$Multi == 0])
len_m = length(killers$Sex[killers$Multi == 1])
table(killers$Sex[killers$Multi == 0]) / len_s*100
table(killers$Sex[killers$Multi == 1]) / len_m*100
table(killers$Race[killers$Multi == 0]) / len_s*100
table(killers$Race[killers$Multi == 1]) / len_m*100
table(killers$WhiteMale[killers$Multi == 0]) / len_s*100
table(killers$WhiteMale[killers$Multi == 1]) / len_m*100
table(killers$US[killers$Multi == 0]) / len_s*100
table(killers$US[killers$Multi == 1]) / len_m*100
l = length(killers$Name)
len_s / l
len_m / l
len_s / l * 100
len_m / l * 100
table(killers$Teased[killers$Multi == 0]) / len_s*100
table(is.na(killers$Sex))
table(is.na(killers$Teased))
table(is.na(killers$Suicide))
table(killers$Race[killers$Multi == 0]) / len_s*100
table(is.na(killers$PhysAbuse))
table(killers$Sex[killers$Multi == 0]) / len_s*100
table(killers$Sex[killers$Multi == 1]) / len_m*100
table(killers$Race[killers$Multi == 0]) / len_s*100
table(killers$Race[killers$Multi == 1]) / len_m*100
m_height1 = mean(killers$Height[killers$Multi == 0], na.rm = T)
m_height2 = mean(killers$Height[killers$Multi == 1], na.rm = T)
m_heights = data.frame(c(m_height1,m_height2))
my_plots = data.frame(m_iqs, m_ages, m_agesb, m_heights, m_numvics)
barplot(as.matrix(my_plots), names.arg=c("IQ", "Age (1st kill)", "Age (last kill)", "Heights", "No. victims"),
beside=TRUE, col=terrain.colors(2))
killers$Height
mean(killers$Height[killers$Multi == 0], na.rm = T)
mean(killers$Height[killers$Multi == 1], na.rm = T)
table(killers$Sex[killers$Multi == 0]) / len_s*100
table(killers$Sex[killers$Multi == 1]) / len_m*100
View(codebook)
sex = data.table((table(killers$Sex[killers$Multi == 0]) / len_s*100), (table(killers$Sex[killers$Multi == 1]) / len_m*100))
sex = data.frame((table(killers$Sex[killers$Multi == 0]) / len_s*100), (table(killers$Sex[killers$Multi == 1]) / len_m*100))
View(sex)
sex = data.frame(c(table(killers$Sex[killers$Multi == 0]) / len_s*100), (table(killers$Sex[killers$Multi == 1]) / len_m*100))
View(sex)
table(killers$Sex[killers$Multi == 0]) / len_s*100
table(killers$Sex[killers$Multi == 1]) / len_m*100
sex = data.frame(table(killers$Sex[killers$Multi == 0]) / len_s*100)
View(sex)
sex_0 = data.frame(table(killers$Sex[killers$Multi == 0]) / len_s*100)
sex_1 = data.frame(table(killers$Sex[killers$Multi == 1]) / len_m*100)
sex = cbind(sex_0$Freq, sex_1$Freq)
sex = data.frame(cbind(sex_0$Freq, sex_1$Freq))
rownames(sex) = c('Male', 'Female')
View(sex)
colnames(sex) = c('% single method', '% multiple methods')
View(sex)
race_0 = data.frame(table(killers$Race[killers$Multi == 0]) / len_s*100)
race_1 = data.frame(table(killers$Race[killers$Multi == 1]) / len_m*100)
race = data.frame(cbind(race_0$Freq, race_1$Freq))
View(race_0)
View(race_1)
race_1$Var1 = 6
View(race_1)
race_1 = data.frame(table(killers$Race[killers$Multi == 1]) / len_m*100)
View(race_1)
race_1 = rbind(race_1, c(6,0))
View(race_1)
race_1 = data.frame(table(killers$Race[killers$Multi == 1]) / len_m*100)
race_1$Var1 = as.character(race_1$Var1)
race_1 = rbind(race_1, c("6",0))
race = data.frame(cbind(race_0$Freq, race_1$Freq))
rownames(race) = c('White', 'Black', 'Hispanic', 'Asian', 'Native American', 'Aboriginal')
colnames(race) = c('% single method', '% multiple methods')
View(race)
sex$`% single method`
round(sex$`% single method`, 2)
sex$`% single method` = round(sex$`% single method`, 2)
sex_0 = data.frame(table(killers$Sex[killers$Multi == 0]) / len_s*100)
sex_1 = data.frame(table(killers$Sex[killers$Multi == 1]) / len_m*100)
sex = data.frame(cbind(sex_0$Freq, sex_1$Freq))
rownames(sex) = c('Male', 'Female')
colnames(sex) = c('% single method', '% multiple methods')
sex$`% single method` = round(sex$`% single method`, 2)
sex$`% multiple methods` = round(sex$`% multiple methods`, 2)
race_0 = data.frame(table(killers$Race[killers$Multi == 0]) / len_s*100)
race_1 = data.frame(table(killers$Race[killers$Multi == 1]) / len_m*100)
race_1$Var1 = as.character(race_1$Var1)
race_1 = rbind(race_1, c("6",0))
race = data.frame(cbind(race_0$Freq, race_1$Freq))
rownames(race) = c('White', 'Black', 'Hispanic', 'Asian', 'Native American', 'Aboriginal')
colnames(race) = c('% single method', '% multiple methods')
race$`% single method` = round(race$`% single method`, 2)
race$`% multiple methods` = round(race$`% multiple methods`, 2)
race$`% single method`
View(sex)
race_0 = data.frame(table(killers$Race[killers$Multi == 0]) / len_s*100)
race_1 = data.frame(table(killers$Race[killers$Multi == 1]) / len_m*100)
View(race_0)
race_1$Var1 = as.character(race_1$Var1)
race_1 = rbind(race_1, c("6",0))
race = data.frame(cbind(race_0$Freq, race_1$Freq))
race$X1
race$X1 = as.character(as.numeric(race$X1))
race$X2 = as.character(as.numeric(race$X2))
rownames(race) = c('White', 'Black', 'Hispanic', 'Asian', 'Native American', 'Aboriginal')
colnames(race) = c('% single method', '% multiple methods')
race$`% single method` = round(race$`% single method`, 2)
race$`% single method`
race_0 = data.frame(table(killers$Race[killers$Multi == 0]) / len_s*100)
race_1 = data.frame(table(killers$Race[killers$Multi == 1]) / len_m*100)
race_1$Var1 = as.character(race_1$Var1)
race_1 = rbind(race_1, c("6",0))
race = data.frame(cbind(race_0$Freq, race_1$Freq))
race$X1 = as.numeric(as.character(race$X1))
race$X2 = as.numeric(as.character(race$X2))
rownames(race) = c('White', 'Black', 'Hispanic', 'Asian', 'Native American', 'Aboriginal')
colnames(race) = c('% single method', '% multiple methods')
race$`% single method` = round(race$`% single method`, 2)
race$`% multiple methods` = round(race$`% multiple methods`, 2)
sex
race
View(killers)
str(killers, list.len = length(killers))
by_victim_method = group_by(killers, Type, VictimCode)
by_victim_method = group_by(killers, Type, VictimCode)
VictimByType= data.frame(summarise(by_victim_method, Total = sum(NumVics, na.rm = T)))
VictimByType = VictimByType[order(-VictimByType$Total),]
View(VictimByType)
ex = is.na(VictimByType$VictimCode)
NumVicsByMethod = NumVicsByMethod[!ex,]
ex = grep("anger|revenge|lust", VictimByType$Type)
ex
grep("anger|revenge|lust", VictimByType$Type)
VictimByType$Type
?grep
ex = grep("anger|revenge|lust", VictimByType$Type, ignore.case = T)
ex
anger = grep("anger|revenge|lust", VictimByType$Type, ignore.case = T)
VictimByType = VictimByType[anger,]
View(VictimByType)
View(victims)
VictimByType = VictimByType[1:10,]
View(VictimByType)
is.na(VictimByType$VictimCode)
by_victim_method = group_by(killers, Type, VictimCode)
VictimByType= data.frame(summarise(by_victim_method, Total = sum(NumVics, na.rm = T)))
VictimByType = VictimByType[order(-VictimByType$Total),]
ex = is.na(VictimByType$VictimCode)
VictimByType = VictimByType[!ex,]
anger = grep("anger|revenge|lust", VictimByType$Type, ignore.case = T)
VictimByType = VictimByType[anger,]
VictimByType = VictimByType[1:10,]
View(VictimByType)
VictimByType$Type_name = ""
VictimByType$Type_name[VictimByType$Type == 11.00] = 'Multiple'
View(VictimByType)
VictimByType$Type_name[VictimByType$Type == 11.00] = 'Multiple'
VictimByType$Type_name
VictimByType$Type
VictimByType$Type_name[VictimByType$VictimCode == 11.00] = 'Multiple'
VictimByType
VictimByType$Type_name[VictimByType$VictimCode == 11.00] = 'Multiple victim types'
VictimByType$Type_name[VictimByType$VictimCode == 8.30] = 'Street - General public'
VictimByType$Type_name[VictimByType$VictimCode == 5.00] = 'Family'
VictimByType$Type_name[VictimByType$VictimCode == 8.50] = 'Street - Acquaintences'
VictimByType$Type_name[VictimByType$VictimCode == 5.70] = 'Family - Girl/Boy friends'
VictimByType$Type_name[VictimByType$VictimCode == 8.32] = 'Street - Men'
VictimByType$Type_name[VictimByType$VictimCode == 4.10] = 'Patients/Wards - Hospital patients'
View(VictimByType)
VictimByType$Type
by_victim_method = group_by(killers, Type, VictimCode)
VictimByType= data.frame(summarise(by_victim_method, Total = sum(NumVics, na.rm = T)))
VictimByType = VictimByType[order(-VictimByType$Total),]
ex = is.na(VictimByType$VictimCode)
VictimByType = VictimByType[!ex,]
VictimByType$Type
financial = grep("financial", VictimByType$Type, ignore.case = T)
VictimByType = VictimByType[financial,]
VictimByType = VictimByType[1:10,]
View(VictimByType)
VictimByType
by_victim_method = group_by(killers, Type, VictimCode)
VictimByType2= data.frame(summarise(by_victim_method, Total = sum(NumVics, na.rm = T)))
VictimByType2 = VictimByType2[order(-VictimByType2$Total),]
ex = is.na(VictimByType2$VictimCode)
VictimByType2 = VictimByType2[!ex,]
financial = grep("financial", VictimByType2$Type, ignore.case = T)
VictimByType2 = VictimByType2[financial,]
VictimByType2 = VictimByType2[1:10,]
VictimByType2$Type_name = ""
VictimByType2$Type_name[VictimByType2$VictimCode == 8.33] = 'Street - Adults - men & women'
VictimByType2$Type_name[VictimByType2$VictimCode == 8.30] = 'Street - General public'
VictimByType2$Type_name[VictimByType2$VictimCode == 4.30] = 'Patients/Wards - Child care'
VictimByType2$Type_name[VictimByType2$VictimCode == 6.00] = 'Employees/Customers'
VictimByType2$Type_name[VictimByType2$VictimCode == 7.10] = 'Home invasion - Men & Women'
VictimByType2$Type_name[VictimByType2$VictimCode == 6.10] = 'Employees/Customers - Employees'
VictimByType2$Type_name[VictimByType2$VictimCode == 11.00] = 'Multiple victim types'
VictimByType2$Type_name[VictimByType2$VictimCode == 4.20] = 'Patients/Wards - Wards'
VictimByType2$Type_name[VictimByType2$VictimCode == 8.31] = 'Street - Women'
View(VictimByType2)
View(VictimByType)
boxplot(killers$NumVics)
boxplot(killers$NumVics, outline = F)
killers$Severity = 1
killers$Severity[killers$NumVics > 2] = 2
killers$Severity[killers$NumVics > 12] = 3
table(killers$Severity)
killers$Severity = as.factor(killers$Severity)
killers$WhiteMale = as.factor(killers$WhiteMale)
killers$WhiteMale20s = as.factor(killers$WhiteMale20s)
killers$US = as.factor(killers$US)
train = train(Severity ~ Sex + Race + Year, method = 'ctree', data = killers)
library(caret)
train = train(Severity ~ Sex + Race + Year, method = 'ctree', data = killers)
plot(train$finalModel)
killers$Sex = as.factor(killers$Sex)
killers$Race = as.factor(killers$Race)
killers$Year
str(killers$Year)
train = train(Severity ~ Sex + Race + Year, method = 'ctree', data = killers)
plot(train$finalModel)
killers$Year = as.factor(killers$Year)
train = train(Severity ~ Sex + Race + Year, method = 'ctree', data = killers)
plot(train$finalModel)
train = train(Severity ~ Sex + Race + Age1stkill, method = 'ctree', data = killers)
train = train(Severity ~ Sex + Race + Age1stKill, method = 'ctree', data = killers)
plot(train$finalModel)
library('Boruta')
set.seed(1)
bor.results <- Boruta(killers, killers$NumVics, maxRuns=20, doTrace=0)
?Boruta
nearZeroVar(killers)
ex = nearZeroVar(killers)
killers = killers[!ex,]
killers = read.csv('Serial Killers Data.csv', stringsAsFactors = F)
ex = nearZeroVar(killers)
killers = killers[,!ex]
killers = read.csv('Serial Killers Data.csv', stringsAsFactors = F)
killers[!ex]
ex = nearZeroVar(killers)
ex
killers[!ex]
?nearZeroVar
killers[,-ex]
killers = killers[,-ex]
View(killers)
aspects = data.frame(colnames(killers))
aspects$Min = 0
aspects$Max = 0
i=1
while (i <= dim(killers)[2]) {
aspects[i,2] = min(killers[,i], na.rm = T)
aspects[i,3] = max(killers[,i], na.rm = T)
i=i+1
}
nas = data.frame(sapply(killers, function(x) sum(is.na(x))))
aspects = cbind(aspects, nas)
rownames(aspects) = seq(1, length(aspects$colnames.killers.),1)
aspects$NA_pc = round(aspects$sapply.killers..function.x..sum.is.na.x... / length(killers$Name) * 100, 2)
i=1
while (i <= dim(killers)[2]) {
aspects[i,6] = length(unique(killers[,i]))
i=i+1
}
aspects = aspects[order(aspects$sapply.killers..function.x..sum.is.na.x...),] #Get them in order of scale
colnames(aspects) = c('Feature', 'Min', 'Max', 'No. of NAs', '% NAs', 'No. of unique values')
View(aspects)
killers == ' '
nas = data.frame(sapply(killers, function(x) sum(is.na(x) | x == " ")))
aspects = cbind(aspects, nas)
rownames(aspects) = seq(1, length(aspects$colnames.killers.),1)
aspects$NA_pc = round(aspects$sapply.killers..function.x..sum.is.na.x... / length(killers$Name) * 100, 2)
nas = data.frame(sapply(killers, function(x) sum(is.na(x) | x == " ")))
nas
aspects = data.frame(colnames(killers))
aspects$Min = 0
aspects$Max = 0
i=1
while (i <= dim(killers)[2]) {
aspects[i,2] = min(killers[,i], na.rm = T)
aspects[i,3] = max(killers[,i], na.rm = T)
i=i+1
}
#Where are the NAs?
nas = data.frame(sapply(killers, function(x) sum(is.na(x) | x == " ")))
aspects = cbind(aspects, nas)
rownames(aspects) = seq(1, length(aspects$colnames.killers.),1)
aspects$NA_pc = round(aspects$sapply.killers..function.x..sum.is.na.x... / length(killers$Name) * 100, 2)
i=1
while (i <= dim(killers)[2]) {
aspects[i,6] = length(unique(killers[,i]))
i=i+1
}
aspects = aspects[order(aspects$sapply.killers..function.x..sum.is.na.x...),] #Get them in order of scale
colnames(aspects) = c('Feature', 'Min', 'Max', 'No. of NAs', '% NAs', 'No. of unique values')
View(aspects)
View(killers)
aspects = data.frame(colnames(killers))
aspects$Min = 0
aspects$Max = 0
i=1
while (i <= dim(killers)[2]) {
aspects[i,2] = min(killers[,i], na.rm = T)
aspects[i,3] = max(killers[,i], na.rm = T)
i=i+1
}
#Where are the NAs?
nas = data.frame(sapply(killers, function(x) sum(is.na(x) | x == "")))
aspects = cbind(aspects, nas)
rownames(aspects) = seq(1, length(aspects$colnames.killers.),1)
aspects$NA_pc = round(aspects$sapply.killers..function.x..sum.is.na.x... / length(killers$Name) * 100, 2)
i=1
while (i <= dim(killers)[2]) {
aspects[i,6] = length(unique(killers[,i]))
i=i+1
}
aspects = aspects[order(aspects$sapply.killers..function.x..sum.is.na.x...),] #Get them in order of scale
colnames(aspects) = c('Feature', 'Min', 'Max', 'No. of NAs', '% NAs', 'No. of unique values')
View(aspects)
aspects = aspects[order(aspects$`No. of NAs`),] #Get them in order of scale
View(aspects)
aspects = aspects[order(-aspects$`No. of NAs`),] #Get them in order of scale
library('FSelector')
set.seed(200)
library("FSelector")
weights = random.forest.importance(NumVics ~., data = killers)
weights = information.gain(NumVics ~., data = killers)
subset = cutoff.k(weights, 10)
subset
weights
train = train(Severity ~ Sex + Race, method = 'ctree', data = killers)
train = train(NumVics ~ Sex + Race, method = 'ctree', data = killers)
killers$Sex = as.factor(killers$Sex)
killers$Race = as.factor(killers$Race)
train = train(NumVics ~ Sex + Race, method = 'ctree', data = killers)
plot(train$finalModel)
train = train(NumVics ~ Sex + Race, method = 'gbm', data = killers)
train
model = glm(NumVics ~ Sex + Race, data = killers)
model
killers$Severity = 1
killers$Severity[killers$NumVics > 2] = 2
killers$Severity[killers$NumVics > 12] = 3
table(killers$Severity)
killers$Severity = as.factor(killers$Severity)
killers$Sex = as.factor(killers$Sex)
killers$Race = as.factor(killers$Race)
model = glm(Severity ~ Sex + Race, data = killers)
model = train(Severity ~ Sex + Race, method = 'gbm', data = killers)
model
plot(modelfinalModel)
getTrainPerf(model)
table(killers$Severity)
?table
by_sexrace = group_by(killers, Sex, Race)
by_sexrace = group_by(killers, Sex, Race)
SeveritySexRace= data.frame(summarise(by_sexrace, Total = sum(NumVics, na.rm = T)))
SeveritySexRace = SeveritySexRace[order(-SeveritySexRace$Total),]
SeveritySexRace= data.frame(summarise(by_sexrace, Total = sum(NumVics, na.rm = T)))
by_sexrace = group_by(killers, Sex, Race)
SeveritySexRace= data.frame(summarise(by_sexrace, Total = sum(NumVics, na.rm = T)))
View(SeveritySexRace)
killers$Sex
killers$Race
killers$Severity
by_sexrace = group_by(killers, Sex, Race, Severity)
by_sexrace
View(by_sexrace)
model = train(Severity ~ Sex + Race, method = 'ctree', data = killers)
plot(model)
killers$Severity = as.factor(killers$Severity)
killers$Sex = as.factor(killers$Sex)
killers$Race = as.factor(killers$Race)
model = train(Severity ~ Sex + Race, method = 'ctree', data = killers)
plot(model)
model
killers$Severity
killers = read.csv('Serial Killers Data.csv', stringsAsFactors = F)
set.seed(200)
library("FSelector")
weights = information.gain(NumVics ~., data = killers)
subset = cutoff.k(weights, 10)
subset
weights
subset
boxplot(killers$NumVics)
boxplot(killers$NumVics, outline = F)
killers$Severity = 1
killers$Severity[killers$NumVics > 2] = 2
killers$Severity[killers$NumVics > 12] = 3
table(killers$Severity)
killers$Severity = as.factor(killers$Severity)
killers$Sex = as.factor(killers$Sex)
killers$Race = as.factor(killers$Race)
model = train(Severity ~ Sex + Race, method = 'ctree', data = killers)
plot(model)
model = train(Severity ~ Sex + Race, method = 'C5.0', data = killers)
warnings()
plot(model)
model = train(Severity ~ Sex + Race, method = 'ctree', data = killers)
plot(model)
plot(model$finalModel)
model = train(Severity ~ Sex, method = 'ctree', data = killers)
plot(model$finalModel)
model = train(NumVics ~ Sex, method = 'ctree', data = killers)
plot(model$finalModel)
model = train(NumVics ~ Sex + Race, method = 'ctree', data = killers)
plot(model$finalModel)
killers$WhiteMale = as.factor(killers$WhiteMale)
model = train(NumVics ~ WhiteMale, method = 'ctree', data = killers)
plot(model$finalModel)
model = train(NumVics ~ WhiteMale + Age1stKill, method = 'ctree', data = killers)
plot(model$finalModel)
model = train(NumVics ~ WhiteMale + AgeLastKill, method = 'ctree', data = killers)
plot(model$finalModel)
